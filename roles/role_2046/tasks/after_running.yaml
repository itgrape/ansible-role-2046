---
- name: copy ldif file
  copy:
    src: "{{ item }}"
    dest: "/tmp/{{ item }}"
    mode: '0644'
  with_items:
    - access.ldif
    - base.ldif
    - init.ldif
  when: ldap_init_enabled


- name: import ldif file
  shell: |
    podman cp /tmp/access.ldif {{ item.virtual_machine_name }}:/root/
    podman cp /tmp/base.ldif {{ item.virtual_machine_name }}:/root/
    podman cp /tmp/init.ldif {{ item.virtual_machine_name }}:/root/
  when: ldap_init_enabled
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ ldap_node_list }}"
  run_once: true


- name: import compute & login file
  shell: |
    podman cp {{ config_file_path }}/slurmd_override.conf {{ item.virtual_machine_name }}:/etc/systemd/system/slurmd.service.d/override.conf
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ compute_node_list + login_node_list }}"
  run_once: true


- name: import control file
  shell: |
    podman cp {{ config_file_path }}/slurm.conf {{ item.virtual_machine_name }}:/etc/slurm/slurm.conf
    podman cp {{ config_file_path }}/gres.conf {{ item.virtual_machine_name }}:/etc/slurm/gres.conf
    podman cp {{ config_file_path }}/slurmdbd.conf {{ item.virtual_machine_name }}:/etc/slurm/slurmdbd.conf
    podman exec {{ item.virtual_machine_name }} chown slurm /etc/slurm/slurmdbd.conf
    podman exec {{ item.virtual_machine_name }} chmod 644 /etc/slurm/gres.conf
    podman exec {{ item.virtual_machine_name }} chown slurm:slurm /etc/slurm/gres.conf
    podman exec {{ item.virtual_machine_name }} chown -R slurm:slurm /var/spool/slurmctld
    podman exec {{ item.virtual_machine_name }} chmod -R 750 /var/spool/slurmctld
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ control_node_list }}"
  run_once: true


- name: attach extra network to login node
  shell: |
    podman network connect macvlan-{{ hostvars[item.real_machine_name].network[1].interface }} {{ item.virtual_machine_name }}
    podman exec {{ item.virtual_machine_name }} ip addr flush dev eth1
    podman exec {{ item.virtual_machine_name }} ip addr add {{ virtual_machines[item.virtual_machine_name].public_ip }} dev eth1
    podman exec {{ item.virtual_machine_name }} ip link set eth1 up
    podman exec {{ item.virtual_machine_name }} ip route add default via {{ hostvars[item.real_machine_name].network[1].gateway }} dev eth1 proto static metric 50
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ login_node_list + ldap_node_list }}"
  run_once: true


- name: flush control node
  shell: |
    podman exec {{ item.virtual_machine_name }} systemctl daemon-reload
    podman exec {{ item.virtual_machine_name }} systemctl restart slurmctld
    podman exec {{ item.virtual_machine_name }} systemctl restart slurmdbd
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ control_node_list }}"
  run_once: true


- name: flush login & compute node
  shell: |
    podman exec {{ item.virtual_machine_name }} systemctl daemon-reload
    podman exec {{ item.virtual_machine_name }} systemctl restart slurmd
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ login_node_list + compute_node_list }}"
  run_once: true


- name: reload state file
  shell: |
    sleep 30
    podman exec {{ item.virtual_machine_name }} scontrol reconfigure
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ control_node_list }}"
  run_once: true


- name: nslcd permission
  shell: |
    podman exec {{ item.virtual_machine_name }} chmod 640 /etc/nslcd.conf
    podman exec {{ item.virtual_machine_name }} systemctl restart nslcd
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ control_node_list + login_node_list + compute_node_list }}"
  run_once: true


- name: init ldap
  shell: |
    podman exec {{ item.virtual_machine_name }} ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /root/init.ldif
    podman exec {{ item.virtual_machine_name }} ldapadd -Q -Y EXTERNAL -H ldapi:/// -f /root/access.ldif
    podman exec {{ item.virtual_machine_name }} ldapadd -x -D 'cn=admin,dc=pushihao,dc=com' -w 'root' -f /root/base.ldif
    podman exec {{ item.virtual_machine_name }} ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif
    podman exec {{ item.virtual_machine_name }} ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif
    podman exec {{ item.virtual_machine_name }} ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif
  when: ldap_init_enabled
  delegate_to: "{{ item.real_machine_name }}"
  loop: "{{ ldap_node_list }}"
  run_once: true


